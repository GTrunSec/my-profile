#! /usr/bin/env zsh
# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
        fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
        fd --type d --hidden --follow --exclude ".git" . "$1"
}

if [ -n "''${commands[fzf-share]}" ]; then
            source "$(fzf-share)/key-bindings.zsh"
fi

function cd() {
        if [[ "$#" != 0 ]]; then
                    builtin cd "$@";
                    return
        fi
        while true; do
                local lsd=$(echo ".." && ls -p | grep '/$' | sed 's;/$;;')
                local dir="$(printf '%s\n' "''${lsd[@]}" |
                        fzf --reverse --preview '
                                        __cd_nxt="$(echo {})";
                                        __cd_path="$(echo $(pwd)/''${__cd_nxt} | sed "s;//;/;")";
                                        echo $__cd_path;
                                        echo;
                                        ls -p --color=always "''${__cd_path}";
                                        ')"
                [[ ''${#dir} != 0 ]] || return 0
                builtin cd "$dir" &> /dev/null
                                done
}


function prev() {
  PREV=$(fc -lrn | head -n 1)
  sh -c "pet new `printf %q "$PREV"`"
}

function pet-select() {
  BUFFER=$(pet search --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle redisplay
}


function jupyter-env() {
  cd ~/data/Jupyter-data-science-environment
  nix-shell my-default.nix --option build-use-sandbox false --command "jupyter lab --ip $1"
}

zle -N pet-select
stty -ixon
bindkey '^s' pet-select



bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

export TERM=xterm-256color

#https://stackoverflow.com/questions/32057760/is-it-possible-to-not-share-history-between-panes-windows-in-tmux-with-zsh
setopt sharehistory
setopt incappendhistory
setopt hist_verify              # reload full command when runing from history
setopt notify                   # report the status of backgrounds jobs immediately
setopt hist_ignore_space        # do not remember commands starting with space
setopt hist_reduce_blanks       # reduce whitespace in history


setopt auto_continue            #automatically send SIGCON to disowned jobs
setopt extended_glob            # so that patterns like ^() *~() ()# can be used


[[ -n "$key[Up]"   ]] && bindkey -- "$key[Up]" up-line-or-beginning-search
[[ -n "$key[Down]" ]] && bindkey -- "$key[Down]" down-line-or-beginning-search
# nix direnv hook
eval "$(direnv hook zsh)"
